BEGIN;
BEGIN
create or replace view revenue4 (supplier_no, total_revenue) as
	select
		l_suppkey,
		sum(l_extendedprice * (1 - l_discount))
	from
		lineitem
	where
		l_shipdate >= '1993-04-01'
		and l_shipdate < date'1993-04-01' + interval '90 days'
	group by
		l_suppkey;
CREATE VIEW
EXPLAIN
select
	s_suppkey,
	s_name,
	s_address,
	s_phone,
	total_revenue
from
	supplier,
	revenue4
where
	s_suppkey = supplier_no
	and total_revenue = (
		select
			max(total_revenue)
		from
			revenue4
	)
order by
	s_suppkey;
                                                                                                        QUERY PLAN                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Remote Subquery Scan on all (datanode_1_1)  (cost=23567227.96..23637170.65 rows=37413 width=79)
   ->  Merge Join  (cost=23567227.96..23637170.65 rows=37413 width=79)
         Merge Cond: (supplier.s_suppkey = revenue4.supplier_no)
         InitPlan 1 (returns $0)
           ->  Aggregate  (cost=11697829.93..11697829.94 rows=1 width=8)
                 ->  HashAggregate  (cost=11696988.14..11697362.27 rows=37413 width=12)
                       Group Key: lineitem_1.l_suppkey
                       ->  Remote Subquery Scan on all (datanode_1_1,datanode_2_1,datanode_3_1,datanode_4_1,datanode_5_1,datanode_6_1,datanode_7_1,datanode_8_1)  (cost=477332.62..11472019.93 rows=22496821 width=12)
                             ->  HashAggregate  (cost=477332.62..11472019.93 rows=37413 width=12)
                                   Group Key: lineitem_1.l_suppkey
                                   ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=477332.62..11472019.93 rows=22496821 width=12)
                                         Recheck Cond: ((l_shipdate >= '1993-04-01'::date) AND (l_shipdate < '1993-06-30 00:00:00'::timestamp without time zone))
                                         ->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..471708.41 rows=22496821 width=0)
                                               Index Cond: ((l_shipdate >= '1993-04-01'::date) AND (l_shipdate < '1993-06-30 00:00:00'::timestamp without time zone))
         ->  Index Scan using pk_supplier on supplier  (cost=0.17..66881.67 rows=1000000 width=71)
         ->  Sort  (cost=11869397.84..11869491.37 rows=37413 width=12)
               Sort Key: revenue4.supplier_no
               ->  Subquery Scan on revenue4  (cost=11865714.30..11866556.09 rows=37413 width=12)
                     ->  HashAggregate  (cost=11865714.30..11866181.96 rows=37413 width=12)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((sum((lineitem.l_extendedprice * ('1'::double precision - lineitem.l_discount))))) = $0)
                           ->  Remote Subquery Scan on all (datanode_1_1,datanode_2_1,datanode_3_1,datanode_4_1,datanode_5_1,datanode_6_1,datanode_7_1,datanode_8_1)  (cost=477332.62..11472019.93 rows=22496821 width=12)
                                 ->  HashAggregate  (cost=477332.62..11472019.93 rows=37413 width=12)
                                       Group Key: lineitem.l_suppkey
                                       ->  Bitmap Heap Scan on lineitem  (cost=477332.62..11472019.93 rows=22496821 width=12)
                                             Recheck Cond: ((l_shipdate >= '1993-04-01'::date) AND (l_shipdate < '1993-06-30 00:00:00'::timestamp without time zone))
                                             ->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..471708.41 rows=22496821 width=0)
                                                   Index Cond: ((l_shipdate >= '1993-04-01'::date) AND (l_shipdate < '1993-06-30 00:00:00'::timestamp without time zone))
(28 rows)

drop view revenue4;
DROP VIEW
COMMIT;
COMMIT
